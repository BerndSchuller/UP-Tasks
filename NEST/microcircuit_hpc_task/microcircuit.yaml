#############################
### parameter config file ###
#############################
params_dict:
  nest: {
    # Scaling factor for in-degrees. Upon downscaling, synaptic weights are
    # taken proportional to 1/sqrt(in-degree) and external drive is adjusted
    # to preserve mean and variances of activity in the diffusion approximation.
    # In-degrees and weights of both intrinsic and extrinsic inputs are adjusted.
    # This scaling was not part of the original study, but this option is included
    # here to enable simulations on small systems that give results similar to
    # full-scale simulations.
    K_scaling: 1.0,
    # Fraction of neurons to simulate
    N_scaling: 1.0,
    # Whether to record from a fixed fraction of neurons in each population.
    # If False, a fixed number of neurons is recorded.
    record_fraction: false,
    # Whether to record membrane potentials
    record_v: false,
    # Fraction of neurons from which to record spikes when record_fraction = True
    frac_record_spikes: 0.1,
    # Fraction of neurons from which to record membrane potentials when
    # record_v=True and record_fraction = True
    frac_record_v: 0.1,
    # Number of neurons from which to record spikes when record_fraction = False
    n_record: 100,
    # Fixed number of neurons from which to record membrane potentials when
    # record_v = True and record_fraction = False
    n_record_v: 20,
    # Type of background input. Possible values: 'poisson' and 'DC'
    # If 'DC' is chosen, a constant external current is provided, equal to the mean
    # current due to the Poisson input used in the default version of the model.
    input_type: poisson,
    # random number generator seed for NEST Poisson generators
    master_seed: 124678,
    # Whether to make random numbers independent of the number of processes
    parallel_safe: true,
    # random number generator seeds for V and connectivity.
    # When parallel_safe is True, only the first is used.
    # When parallel_safe is False, the first num_processes are used.
    pyseed: 2563297,
    # Whether to record correlations
    record_corr: false,
    # Whether to save connections to file.
    # Even if save_connections is set to True, at the moment connections are not
    # saved because the output exceeds the user's default capacity on the Collaboratory.
    save_connections: false}
# Simulator back-end, currently it has to be nest
simulator: nest
simulator_params:
  nest: {max_delay: 100.0, min_delay: 0.1, sim_duration: 1000.0, threads: 1, timestep: 0.1}
# Parameters for plots of spiking activity
plot_spiking_activity: true
# Fraction of recorded neurons to include in raster plot
frac_to_plot: 0.5
# Excitatory and inhibitory population
pops: {E: 0, I: 1}
# raster_t_min and raster_t_max include the time scaling factor
# if raster_t_max == 'sim_duration': plot for the whole duration of the simulation
# else: enter float
raster_t_max: sim_duration
raster_t_min: 0.0
# In-degrees for external inputs
K_ext:
  L23: {E: 1600, I: 1500}
  L4: {E: 2100, I: 1900}
  L5: {E: 2000, I: 1900}
  L6: {E: 2900, I: 2100}
# Numbers of neurons in full-scale model
N_full:
  L23: {E: 20683, I: 5834}
  L4: {E: 21915, I: 5479}
  L5: {E: 4850, I: 1065}
  L6: {E: 14395, I: 2948}
# Mean and standard deviation of initial membrane potential distribution
V0_mean: -58.0 # mV
V0_sd: 5.0 # mV
# Background rate per synapse
bg_rate: 8.0 # spikes/s
# Probabilities for >=1 connection between neurons in the given populations.
# The first index is for the target population; the second for the source population
#  2/3e   2/3i   4e     4i      5e      5i   6e      6i
conn_probs:
- [0.1009, 0.1689, 0.0437, 0.0818, 0.0323, 0.0000, 0.0076, 0.0000]
- [0.1346, 0.1371, 0.0316, 0.0515, 0.0755, 0.0000, 0.0042, 0.0000]
- [0.0077, 0.0059, 0.0497, 0.1350, 0.0067, 0.0003, 0.0453, 0.0000]
- [0.0691, 0.0029, 0.0794, 0.1597, 0.0033, 0.0000, 0.1057, 0.0000]
- [0.1004, 0.0622, 0.0505, 0.0057, 0.0831, 0.3726, 0.0204, 0.0000]
- [0.0548, 0.0269, 0.0257, 0.0022, 0.0600, 0.3158, 0.0086, 0.0000]
- [0.0156, 0.0066, 0.0211, 0.0166, 0.0572, 0.0197, 0.0396, 0.2252]
- [0.0364, 0.0010, 0.0034, 0.0005, 0.0277, 0.0080, 0.0658, 0.1443]
# Means and standard deviations of delays from given source populations (ms)
d_mean: {E: 1.5, I: 0.75}
d_sd: {E: 0.75, I: 0.375}
# Mean rates in the full-scale model, necessary for scaling
# Precise values differ somewhat between network realizations
full_mean_rates:
  L23: {E: 0.971, I: 2.868}
  L4: {E: 4.746, I: 5.396}
  L5: {E: 8.142, I: 9.078}
  L6: {E: 0.991, I: 7.523}
# Relative inhibitory synaptic weight
g: -4.0
layers: {L23: 0, L4: 1, L5: 2, L6: 3}
n_layers: 4
n_pops_per_layer: 2
# Neuron model
neuron_model: IF_curr_exp
neuron_params: {
    cm: 0.25, # nF
    i_offset: 0.0, # nA 
    tau_m: 10.0, # ms
    tau_refrac: 2.0, # ms
    tau_syn_E: 0.5, # ms
    tau_syn_I: 0.5, # ms
    v_reset: -65.0, # mV
    v_rest: -65.0, # mV
    v_thresh: -50.0 # mV
}
structure:
  L23: {E: 0, I: 1}
  L4: {E: 2, I: 3}
  L5: {E: 4, I: 5}
  L6: {E: 6, I: 7}
system_params: {output_path: ./output/}
# Maximum delay over which to determine covariances
tau_max: 100.0
thal_params:
    # Connection probabilities
    C:
        L23: {E: 0.0, I: 0.0}
        L4: {E: 0.0983, I: 0.0619}
        L5: {E: 0.0, I: 0.0}
        L6: {E: 0.0512, I: 0.0196}
    duration: 100.0
    # Number of neurons in thalamic population
    n_thal: 902
    rate: 120.0 # spikes/s;
    # Note that the rate is erroneously given as 15 spikes/s in the paper.
    # The rate actually provided was 120 spikes/s.
    start: 300.0 # ms
# Parameters for transient thalamic input.
thalamic_input: false
# Mean synaptic weight for L4e->L2/3e connections
# See p. 801 of the paper, second paragraph under 'Model Parameterization',
# and the caption to Supplementary Fig. 7
w_234: 0.1756 # nA, = 2 * w_mean
# Mean synaptic weight for all excitatory projections except L4e->L2/3e
w_mean: 0.0878 # nA
# Standard deviation of weight distribution relative to mean for
# all projections except L4e->L2/3e
w_rel: 0.1
# Standard deviation of weight distribution relative to mean for L4e->L2/3e
# This value is not mentioned in the paper, but is chosen to match the
# original code by Tobias Potjans
w_rel_234: 0.05
